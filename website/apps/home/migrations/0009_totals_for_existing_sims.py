# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-06 20:34
from __future__ import unicode_literals

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations
from django.db.models.aggregates import Sum


def calculate_totals(apps, schema_editor):
    # Import the model the migration expects
    Simulation = apps.get_model("home", "Simulation")
    SimulationData = apps.get_model("home", "Data")
    SimulationTotals = apps.get_model("home", "Totals")

    # For each simulation, see if simulation totals exist for that simulation
    for sim in Simulation.objects.all():
        simulation_obj = SimulationData.objects.filter(simulation=sim.id)

        # Get a list of all dates in the simulation
        date_list = []
        for s in simulation_obj:
            date_list.append(s.date)
        date_list = list(set(date_list))
        date_list.sort()

        # For each date in the simulation data, see if a total exists for that simulation and date in the Totals
        for d in date_list:
            try:
                simTot = SimulationTotals.objects.filter(simulation=sim.id, data_date=d)
            except ObjectDoesNotExist:
                # If the simulation does not exist in the totals table, we need to calculate the totals
                sums = SimulationData.objects.filter(simulation_id=sim.id, date=d).aggregate(
                    total_low_range=Sum('value_low'),
                    total_mid_point=Sum('value_mid'),
                    total_high_range=Sum('value_high'))

                total = SimulationTotals.objects.create(
                    data_date=d,
                    simulation=sim,
                    total_low=sums['total_low_range'],
                    total_mid=sums['total_mid_point'],
                    total_high=sums['total_high_range'],
                    date_output_generated=sim.date_output_generated
                )


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0008_auto_20170203_1424'),
    ]

    operations = [
        migrations.RunPython(calculate_totals),
    ]